alias beep='paplay ~/Music/Sounds/phone-incoming-call.ogg'
alias docker_cleanup='docker rm $(docker ps -qa -f status=exited)'


slack_remind_me() {
    if [ -z "$MY_SLACK_USER_ID" ]; then
        echo "ERROR: environment variable MY_SLACK_USER_ID not set"
        return
    fi
    text=$1
    time=$2
    json=`wget -q -O - "$SLACK_API_URL/reminders.add?token=$SLACK_TOKEN&text=$text&time=$time&user=$MY_SLACK_USER_ID"`
    ok=`echo $json | python -c "import sys, json; print json.load(sys.stdin)['ok']"`
    if [ $ok != 'True' ]; then
        echo 'Error while setting reminder'
        echo $json
    fi
}

slack_me() {
    if [ -z "$MY_SLACK_USER_ID" ]; then
        echo "ERROR: environment variable MY_SLACK_USER_ID not set"
        return
    fi

    text=$1
    json=`wget -q -O - "$SLACK_API_URL/chat.postMessage?token=$SLACK_TOKEN&text=$text&channel=$MY_SLACK_USER_ID&username=you"`
    ok=`echo $json | python -c "import sys, json; print json.load(sys.stdin)['ok']"`
    if [ $ok != 'True' ]; then
        echo 'Error while slacking you'
        echo $json
    fi
}

# Set variables for instance ID and public IP retrieved using tag name
ec2_instance_from_tag() {
    if [ $# -eq 0 ]; then
        echo "ERROR: You must provide an instance name"
        return 1
    fi
    ec2_instance_id=`aws ec2 describe-instances \
        --filters "Name=tag-value,Values=$1" \
        --query "Reservations[*].Instances[*].[InstanceId]" --output=text`

    ec2_instance_public_ip=`aws ec2 describe-instances \
        --instance-ids $ec2_instance_id \
        --query "Reservations[*].Instances[*].PublicIpAddress" --output=text`

    ec2_instance_private_ip=`aws ec2 describe-instances \
        --instance-ids $ec2_instance_id \
        --query "Reservations[*].Instances[*].PrivateIpAddress" --output=text`
}

stop_ec2() {
    if [ $# -eq 0 ]; then
        echo "ERROR: You must provide an instance name"
        return 1
    fi
    # Retrieve instance ID and public IP using tag name
    ec2_instance_from_tag $1
    # Stop instance
    aws ec2 stop-instances --instance-ids $ec2_instance_id
    # TODO: Remove Slack reminver
    #wget -q -O - "$SLACK_API_URL/users.info?token=$SLACK_TOKEN&user=U0763TLKD" >/dev/null 2>&1
}

start_ec2() {
    if [ $# -eq 0 ]; then
        echo "ERROR: You must provide an instance name"
        return 1
    fi
    # Retrieve instance ID and public IP using tag name
    ec2_instance_from_tag $1
    # Start instance
    aws ec2 start-instances --instance-ids $ec2_instance_id
    #slack_remind_me 'to stop the EC2 machine' 'today at 17:00'
}
