"=====================================================================
" Load plugins using plug.vim (https://github.com/junegunn/vim-plug)
"=====================================================================
call plug#begin('~/.config/nvim/plugged')
Plug 'jlanzarotta/bufexplorer'
Plug 'kien/ctrlp.vim'
Plug 'tpope/vim-fugitive'
Plug 'mbbill/undotree'
Plug 'scrooloose/nerdcommenter'
Plug 'tpope/vim-surround'
Plug 'scrooloose/syntastic'
Plug 'majutsushi/tagbar'
Plug 'tpope/vim-unimpaired'
Plug 'altercation/vim-colors-solarized'
Plug 'sudar/vim-arduino-syntax'
Plug 'Shougo/deoplete.nvim'
Plug 'zchee/deoplete-jedi'
call plug#end()

"=====================================================================
" Color stuff 
"=====================================================================

let python_highlight_all = 1

set background=dark
"let g:solarized_termtrans=1
colorscheme solarized
call togglebg#map("<F5>")

"=====================================================================
" Various settings
"=====================================================================

" Set the number of space to indent
set shiftwidth=4
" Set the text width
set textwidth=79
" Do not wrap lines
set nowrap
" Insert spaces instead of tabstop
set expandtab
" The sign at the beginning of the line when wrapping a line
set showbreak=>>>
"Don't ignore case when there is an upper case character in the pattern. For
"smartcase to take effect, ignorecase must be on.
set ignorecase
set smartcase
" Vertical split shows no |
set fillchars=fold:-

" File Explorer settings
let g:explHideFiles='^\.,\.gz$,\.exe$,\.zip$,\.o,\..*~$'
" Files with this suffixe will get a lower priority
set suffixes='.bak,~,.o,.info,.swp,.obj,.pyc'

" statusline
" cf the default statusline: %<%f\ %h%m%r%=%-14.(%l,%c%V%)\ %P
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P
" Always show a status line.
set laststatus=2 
" Ignore certain files from listings.
set wildignore+=*.pyc,*.*~,build

set clipboard+=unnamedplus

"=====================================================================
" Plugins
"=====================================================================

" BufExplorer
let g:bufExplorerShowRelativePath=1

" Syntastic
let g:syntastic_enable_signs = 0
let g:syntastic_auto_loc_list = 1
let g:syntastic_enable_highlighting = 1
let g:syntastic_java_javac_config_file_enabled = 1
let g:syntastic_ruby_checkers = ['mri', 'rubocop']
let g:syntastic_python_python_exec = '/usr/bin/python3'

" SuperTab
let g:SuperTabDefaultCompletionType = "context"

" Tagbar
let g:tagbar_autoclose = 1
let g:tagbar_compact = 1

" Deoplete
let g:deoplete#enable_at_startup = 1
if !exists('g:deoplete#omni#input_patterns')
  let g:deoplete#omni#input_patterns = {}
endif
let g:deoplete#disable_auto_complete = 1

" =====================================================================
" Autocommands
"=====================================================================

autocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif

augroup omnifuncs
  autocmd!
  autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
  autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
  autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
  autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
  autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
augroup end

"=====================================================================
" Mappings and Abbreviations
"=====================================================================

map <Leader>z :b #<CR>
map <Leader>q :bd<CR>
map <C-s> :write<CR>
nnoremap <Leader>/ :nohlsearch<CR>
map <Leader>w :set wrap<CR>
map <Leader>W :set nowrap<CR>
map <Leader>d :vertical diffsplit 
map <Leader>D :set nodiff \| set foldcolumn=0 \| set noscb<CR>
map <Tab> %

" Moving around mappings
map <M-Up> <C-W><Up>
map <M-Down> <C-W><Down>
map <M-Left> <C-W><Left>
map <M-Right> <C-W><Right>
map <C-Up> <C-y>
map <C-Down> <C-e>
map <S-Up> <C-W>+
map <S-Down> <C-W>-
map <S-Left> <C-W><
map <S-Right> <C-W>>
map <C-Right> w
map <C-Left> b

" Mapping that work in insert mode
map! <C-s> <ESC>:write<CR>
map! <C-Up> <C-y>
map! <C-Down> <C-e>
map! <M-z> <ESC>:A<CR>

" Searching using Git
map <Leader>g :Ggrep <cword><CR><CR> :cl<CR>

" Syntastic mapping
map <Leader>y :SyntasticToggleMode<CR>

" Mapping of function keys
nmap <F1> :Explore<CR>
nmap <F2> :BufExplorer<CR>
nmap <F3> :TagbarToggle<CR>
nmap <F6> :Gstatus<CR>
nmap <F7> :Gdiff<CR>
nmap <F8> :Gcommit<CR>
nmap <F9> :UndotreeToggle<CR>

inoremap <C-E> <C-X><C-E>
inoremap <C-Y> <C-X><C-Y>

" Deoplete tab-complete
"inoremap <expr><tab> pumvisible() ? "\<c-n>" : "\<tab>"
" Let <Tab> also do completion
inoremap <silent><expr> <Tab>
\ pumvisible() ? "\<C-n>" :
\ deoplete#mappings#manual_complete()

